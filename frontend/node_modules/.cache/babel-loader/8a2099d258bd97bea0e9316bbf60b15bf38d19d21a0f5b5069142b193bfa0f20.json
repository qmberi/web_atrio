{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineStore } from 'pinia';\nimport apiClient from '@/../utils/api.js';\nexport const useCategoryStore = defineStore('person', {\n  state: () => ({\n    persons: [],\n    loading: false\n  }),\n  actions: {\n    async fetchPersons() {\n      this.loading = true;\n      try {\n        const response = await apiClient.get('/person');\n        this.categories = response.data;\n      } catch (error) {\n        console.error('Erreur de la récuperationdes données');\n      } finally {\n        this.loading = false;\n      }\n    },\n    async createPerson(name) {\n      try {\n        const response = await apiClient.post('/person', {\n          name\n        });\n        this.categories.push(response.data);\n      } catch (error) {\n        console.error(\"Erreur lors de la creation de la categorie \", error);\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","apiClient","useCategoryStore","state","persons","loading","actions","fetchPersons","response","get","categories","data","error","console","createPerson","name","post","push"],"sources":["/Users/mberi/Documents/dev/java/test-web-atrio/frontend/src/stores/PersonStore.js"],"sourcesContent":["import { defineStore } from 'pinia';\nimport apiClient from '@/../utils/api.js';\n\nexport const useCategoryStore = defineStore('person', {\n    state: () => ({\n        persons: [],\n        loading: false\n    }),\n    actions: {\n        async fetchPersons() {\n            this.loading = true;\n            try {\n                const response = await apiClient.get('/person');\n\n                this.categories = response.data;\n            } catch (error) {\n                console.error('Erreur de la récuperationdes données');\n            } finally {\n                this.loading = false;\n            }\n        },\n        async createPerson(name) {\n            try {\n                const response = await apiClient.post('/person', { name });\n\n                this.categories.push(response.data);\n            } catch (error) {\n                console.error(\"Erreur lors de la creation de la categorie \", error);\n            }\n        }\n    }\n});"],"mappings":";AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,SAAS,MAAM,mBAAmB;AAEzC,OAAO,MAAMC,gBAAgB,GAAGF,WAAW,CAAC,QAAQ,EAAE;EAClDG,KAAK,EAAEA,CAAA,MAAO;IACVC,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE;EACb,CAAC,CAAC;EACFC,OAAO,EAAE;IACL,MAAMC,YAAYA,CAAA,EAAG;MACjB,IAAI,CAACF,OAAO,GAAG,IAAI;MACnB,IAAI;QACA,MAAMG,QAAQ,GAAG,MAAMP,SAAS,CAACQ,GAAG,CAAC,SAAS,CAAC;QAE/C,IAAI,CAACC,UAAU,GAAGF,QAAQ,CAACG,IAAI;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sCAAsC,CAAC;MACzD,CAAC,SAAS;QACN,IAAI,CAACP,OAAO,GAAG,KAAK;MACxB;IACJ,CAAC;IACD,MAAMS,YAAYA,CAACC,IAAI,EAAE;MACrB,IAAI;QACA,MAAMP,QAAQ,GAAG,MAAMP,SAAS,CAACe,IAAI,CAAC,SAAS,EAAE;UAAED;QAAK,CAAC,CAAC;QAE1D,IAAI,CAACL,UAAU,CAACO,IAAI,CAACT,QAAQ,CAACG,IAAI,CAAC;MACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;MACvE;IACJ;EACJ;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}